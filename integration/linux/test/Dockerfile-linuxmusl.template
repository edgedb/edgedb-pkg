ARG DOCKER_ARCH=
FROM ${DOCKER_ARCH}alpine:3.16 AS builder

ENV CURL_VERSION 7.84.0
ENV JQ_VERSION fa6a2ff6888f27648c703688f1a973588406d92a

RUN apk add --no-cache \
    busybox-static \
    curl \
    coreutils \
    build-base \
    clang \
    openssl-dev \
    nghttp2-dev \
    nghttp2-static \
    libssh2-dev \
    libssh2-static \
    openssl-libs-static \
    zlib-static \
    autoconf \
    automake \
    libtool \
    linux-headers \
    bison \
    flex \
    git

RUN set -ex \
    \
    && mkdir /build \
    && cp /bin/busybox.static /build/busybox \
    && cd /tmp \
	&& curl --proto '=https' --tlsv1.2 -sSfL \
        "https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz" \
        -o curl.tar.gz \
	&& mkdir -p /usr/src/curl \
	&& tar -xzC /usr/src/curl --strip-components=1 -f curl.tar.gz \
	&& rm curl.tar.gz \
	&& cd /usr/src/curl \
    && env CC="clang" LDFLAGS="-static -all-static" PKG_CONFIG="pkg-config --static" \
        ./configure \
            --disable-shared --enable-static --disable-ldap \
            --enable-ipv6 --enable-unix-sockets --with-ssl --with-libssh2 \
    && make -j "$(nproc)" \
    && cp src/curl /build/curl \
    && cd /tmp \
	&& mkdir -p /usr/src/jq \
    && git clone --recursive https://github.com/stedolan/jq /usr/src/jq \
    && cd /usr/src/jq \
    && git reset --hard "${JQ_VERSION}" \
    && autoreconf -fi \
    && ./configure --with-oniguruma=builtin --disable-valgrind --enable-all-static \
    && make LDFLAGS=-all-static -j "$(nproc)" \
    && cp jq /build/jq \
    && chmod +x /build/jq \
    && file /build/busybox \
    && file /build/jq \
    && file /build/curl

FROM ${DOCKER_ARCH}golang:1.17-alpine3.15 AS golang
ENV GOSU_VERSION 1.14
ENV CGO_ENABLED 0
RUN set -ex \
	\
    && apk add --no-cache curl \
    && cd /tmp \
	&& curl --proto '=https' --tlsv1.2 -sSfL "https://github.com/tianon/gosu/archive/refs/tags/${GOSU_VERSION}.tar.gz" -o gosu.tar.gz \
	&& mkdir -p /go/src/github.com/tianon/gosu \
	&& tar -xzC /go/src/github.com/tianon/gosu --strip-components=1 -f gosu.tar.gz \
	&& rm gosu.tar.gz \
	&& cd /go/src/github.com/tianon/gosu \
    && go mod download \
    && go mod verify \
    && go build -v -ldflags '-d -s -w' -o /bin/gosu \
    && chmod +x /bin/gosu

FROM ${DOCKER_ARCH}alpine:3.16 AS musl
RUN apk add --no-cache tar \
    && apk info -L musl | tail -n +2 > "/tmp/contents" \
    && tar \
        --directory=/ \
        --create \
        --no-recursion \
        --sparse \
        --no-seek \
        --files-from=/tmp/contents \
        --file=/tmp/musl.tar

FROM scratch
COPY --from=builder /build/busybox /bin/busybox
COPY --from=builder /build/jq /bin/jq
COPY --from=builder /build/curl /bin/curl
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=golang /bin/gosu /bin/gosu
COPY --from=musl /tmp/musl.tar /tmp/musl.tar

RUN ["/bin/busybox", "--install", "-s", "/bin/"]
RUN ["/bin/tar", "xvf", "/tmp/musl.tar", "-C", "/"]
RUN ["/bin/rm", "/tmp/musl.tar"]
%%WRITE_ENTRYPOINT%%
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
